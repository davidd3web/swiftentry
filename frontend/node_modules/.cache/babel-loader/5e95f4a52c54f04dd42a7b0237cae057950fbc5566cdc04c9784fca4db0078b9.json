{"ast":null,"code":"var _jsxFileName = \"/Users/daviddelvin/Desktop/swiftentry/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport AnimatedRoutes from './components/AnimatedRoutes';\nimport ToggleButton from './components/ToggleButton';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport GlobalStyles from './globalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the theme\n  const [theme, setTheme] = useState('light');\n\n  // Function to toggle between light and dark theme\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme === 'light' ? lightTheme : darkTheme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(AnimatedRoutes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"theme-toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-colour-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","NavBar","AnimatedRoutes","ToggleButton","ThemeProvider","lightTheme","darkTheme","GlobalStyles","jsxDEV","_jsxDEV","App","_s","theme","setTheme","toggleTheme","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/daviddelvin/Desktop/swiftentry/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nimport NavBar from './components/NavBar';\nimport AnimatedRoutes from './components/AnimatedRoutes';\nimport ToggleButton from './components/ToggleButton';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport GlobalStyles from './globalStyles';\n\nfunction App() {\n  // State to manage the theme\n  const [theme, setTheme] = useState('light');\n\n  // Function to toggle between light and dark theme\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n      <GlobalStyles />\n\n        <div className=\"App\">\n          <NavBar />\n          <div className='content'>\n            <AnimatedRoutes />\n          </div>\n          <div className=\"theme-toggle\">\n            {/* <ToggleButton toggleTheme={toggleTheme} /> */}\n          </div>\n          <div className='background-colour-container'></div>\n        </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAElB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,EAAEC,SAAS,QAAQ,SAAS;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEH,OAAA,CAACL,aAAa;IAACQ,KAAK,EAAEA,KAAK,KAAK,OAAO,GAAGP,UAAU,GAAGC,SAAU;IAAAS,QAAA,gBAC/DN,OAAA,CAACF,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEdV,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAL,QAAA,gBAClBN,OAAA,CAACR,MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVV,OAAA;QAAKW,SAAS,EAAC,SAAS;QAAAL,QAAA,eACtBN,OAAA,CAACP,cAAc;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC,eACNV,OAAA;QAAKW,SAAS,EAAC;MAAc;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CAAC,eACNV,OAAA;QAAKW,SAAS,EAAC;MAA6B;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEpB;AAACR,EAAA,CAzBQD,GAAG;AAAAW,EAAA,GAAHX,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}