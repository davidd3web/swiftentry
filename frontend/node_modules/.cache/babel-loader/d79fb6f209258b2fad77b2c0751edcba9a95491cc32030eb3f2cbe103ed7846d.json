{"ast":null,"code":"var _jsxFileName = \"/Users/daviddelvin/Desktop/swiftentry/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport '../src/App.css';\nimport NavBar from './components/NavBar';\nimport AnimatedRoutes from './components/AnimatedRoutes';\nimport ToggleButton from './components/ToggleButton';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport GlobalStyles from './globalStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to manage the theme\n  const [theme, setTheme] = useState('light');\n\n  // Function to toggle between light and dark theme\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleOAuthProvider, {\n    clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme === 'light' ? lightTheme : darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(AnimatedRoutes, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"theme-toggle\",\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            toggleTheme: toggleTheme\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"background-colour-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","GoogleOAuthProvider","NavBar","AnimatedRoutes","ToggleButton","ThemeProvider","lightTheme","darkTheme","GlobalStyles","jsxDEV","_jsxDEV","App","_s","theme","setTheme","toggleTheme","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/daviddelvin/Desktop/swiftentry/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\nimport '../src/App.css';\n\nimport NavBar from './components/NavBar';\nimport AnimatedRoutes from './components/AnimatedRoutes';\nimport ToggleButton from './components/ToggleButton';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme';\nimport GlobalStyles from './globalStyles';\n\nfunction App() {\n  // State to manage the theme\n  const [theme, setTheme] = useState('light');\n\n  // Function to toggle between light and dark theme\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n\n  return (\n    <GoogleOAuthProvider clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}>\n      <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyles />\n\n          <div className=\"App\">\n            <NavBar />\n            <div className='content'>\n              <AnimatedRoutes />\n            </div>\n            <div className=\"theme-toggle\">\n              <ToggleButton toggleTheme={toggleTheme} />\n            </div>\n            <div className='background-colour-container'></div>\n          </div>\n      </ThemeProvider>\n    </GoogleOAuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,mBAAmB,QAAQ,qBAAqB;AACzD,OAAO,gBAAgB;AAEvB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,EAAEC,SAAS,QAAQ,SAAS;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;;EAE3C;EACA,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEH,OAAA,CAACT,mBAAmB;IAACe,QAAQ,EAAEC,OAAO,CAACC,GAAG,CAACC,0BAA2B;IAAAC,QAAA,eACpEV,OAAA,CAACL,aAAa;MAACQ,KAAK,EAAEA,KAAK,KAAK,OAAO,GAAGP,UAAU,GAAGC,SAAU;MAAAa,QAAA,gBAC/DV,OAAA,CAACF,YAAY;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEdd,OAAA;QAAKe,SAAS,EAAC,KAAK;QAAAL,QAAA,gBAClBV,OAAA,CAACR,MAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVd,OAAA;UAAKe,SAAS,EAAC,SAAS;UAAAL,QAAA,eACtBV,OAAA,CAACP,cAAc;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CAAC,eACNd,OAAA;UAAKe,SAAS,EAAC,cAAc;UAAAL,QAAA,eAC3BV,OAAA,CAACN,YAAY;YAACW,WAAW,EAAEA;UAAY;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACNd,OAAA;UAAKe,SAAS,EAAC;QAA6B;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE1B;AAACZ,EAAA,CA3BQD,GAAG;AAAAe,EAAA,GAAHf,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}